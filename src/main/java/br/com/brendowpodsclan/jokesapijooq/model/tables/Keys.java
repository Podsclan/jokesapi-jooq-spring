/*
 * This file is generated by jOOQ.
*/
package br.com.brendowpodsclan.jokesapijooq.model.tables;


import br.com.brendowpodsclan.jokesapijooq.model.tables.tables.Author;
import br.com.brendowpodsclan.jokesapijooq.model.tables.tables.Joke;
import br.com.brendowpodsclan.jokesapijooq.model.tables.tables.records.AuthorRecord;
import br.com.brendowpodsclan.jokesapijooq.model.tables.tables.records.JokeRecord;

import javax.annotation.Generated;

import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.AbstractKeys;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>libraryjokes</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<AuthorRecord, Integer> IDENTITY_AUTHOR = Identities0.IDENTITY_AUTHOR;
    public static final Identity<JokeRecord, Integer> IDENTITY_JOKE = Identities0.IDENTITY_JOKE;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<AuthorRecord> KEY_AUTHOR_PRIMARY = UniqueKeys0.KEY_AUTHOR_PRIMARY;
    public static final UniqueKey<JokeRecord> KEY_JOKE_PRIMARY = UniqueKeys0.KEY_JOKE_PRIMARY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<JokeRecord, AuthorRecord> JOKE_IBFK_1 = ForeignKeys0.JOKE_IBFK_1;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 extends AbstractKeys {
        public static Identity<AuthorRecord, Integer> IDENTITY_AUTHOR = createIdentity(Author.AUTHOR, Author.AUTHOR.AUTHOR_ID);
        public static Identity<JokeRecord, Integer> IDENTITY_JOKE = createIdentity(Joke.JOKE, Joke.JOKE.JOKE_ID);
    }

    private static class UniqueKeys0 extends AbstractKeys {
        public static final UniqueKey<AuthorRecord> KEY_AUTHOR_PRIMARY = createUniqueKey(Author.AUTHOR, "KEY_author_PRIMARY", Author.AUTHOR.AUTHOR_ID);
        public static final UniqueKey<JokeRecord> KEY_JOKE_PRIMARY = createUniqueKey(Joke.JOKE, "KEY_joke_PRIMARY", Joke.JOKE.JOKE_ID);
    }

    private static class ForeignKeys0 extends AbstractKeys {
        public static final ForeignKey<JokeRecord, AuthorRecord> JOKE_IBFK_1 = createForeignKey(Keys.KEY_AUTHOR_PRIMARY, Joke.JOKE, "joke_ibfk_1", Joke.JOKE.JOKE_AUTHORID);
    }
}
